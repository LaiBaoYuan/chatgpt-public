.prose {
  color: var(--tw-prose-body);
  max-width: 65ch;
}

.prose :where([class~='lead']):not(:where([class~='not-prose'] *)) {
  color: var(--tw-prose-lead);
  font-size: 1.25em;
  line-height: 1.6;
  margin-bottom: 1.2em;
  margin-top: 1.2em;
}

.prose :where(a):not(:where([class~='not-prose'] *)) {
  color: var(--tw-prose-links);
  font-weight: 500;
  text-decoration: underline;
}

.prose :where(strong):not(:where([class~='not-prose'] *)) {
  color: var(--tw-prose-bold);
  font-weight: 600;
}

.prose :where(a strong):not(:where([class~='not-prose'] *)) {
  color: inherit;
}

.prose :where(blockquote strong):not(:where([class~='not-prose'] *)) {
  color: inherit;
}

.prose :where(thead th strong):not(:where([class~='not-prose'] *)) {
  color: inherit;
}

.prose :where(ol):not(:where([class~='not-prose'] *)) {
  list-style-type: decimal;
  margin-bottom: 1.25em;
  margin-top: 1.25em;
  padding-left: 1.625em;
}

.prose :where(ol[type='A']):not(:where([class~='not-prose'] *)) {
  list-style-type: upper-alpha;
}

.prose :where(ol[type='a']):not(:where([class~='not-prose'] *)) {
  list-style-type: lower-alpha;
}

.prose :where(ol[type='A s']):not(:where([class~='not-prose'] *)) {
  list-style-type: upper-alpha;
}

.prose :where(ol[type='a s']):not(:where([class~='not-prose'] *)) {
  list-style-type: lower-alpha;
}

.prose :where(ol[type='I']):not(:where([class~='not-prose'] *)) {
  list-style-type: upper-roman;
}

.prose :where(ol[type='i']):not(:where([class~='not-prose'] *)) {
  list-style-type: lower-roman;
}

.prose :where(ol[type='I s']):not(:where([class~='not-prose'] *)) {
  list-style-type: upper-roman;
}

.prose :where(ol[type='i s']):not(:where([class~='not-prose'] *)) {
  list-style-type: lower-roman;
}

.prose :where(ol[type='1']):not(:where([class~='not-prose'] *)) {
  list-style-type: decimal;
}

.prose :where(ul):not(:where([class~='not-prose'] *)) {
  list-style-type: disc;
  margin-bottom: 1.25em;
  margin-top: 1.25em;
  padding-left: 1.625em;
}

.prose :where(ol > li):not(:where([class~='not-prose'] *))::marker {
  color: var(--tw-prose-counters);
  font-weight: 400;
}

.prose :where(ul > li):not(:where([class~='not-prose'] *))::marker {
  color: var(--tw-prose-bullets);
}

.prose :where(hr):not(:where([class~='not-prose'] *)) {
  border-color: var(--tw-prose-hr);
  border-top-width: 1px;
  margin-bottom: 3em;
  margin-top: 3em;
}

.prose :where(blockquote):not(:where([class~='not-prose'] *)) {
  border-left-color: var(--tw-prose-quote-borders);
  border-left-width: 0.25rem;
  color: var(--tw-prose-quotes);
  font-style: italic;
  font-style: normal;
  font-weight: 500;
  margin-bottom: 1.6em;
  margin-top: 1.6em;
  padding-left: 1em;
  quotes: '\201C''\201D''\2018''\2019';
}

.prose
  :where(blockquote p:first-of-type):not(
    :where([class~='not-prose'] *)
  ):before {
  content: open-quote;
}

.prose
  :where(blockquote p:last-of-type):not(:where([class~='not-prose'] *)):after {
  content: close-quote;
}

.prose :where(h1):not(:where([class~='not-prose'] *)) {
  color: var(--tw-prose-headings);
  font-size: 2.25em;
  font-weight: 800;
  line-height: 1.1111111;
  margin-bottom: 0.8888889em;
  margin-top: 0;
}

.prose :where(h1 strong):not(:where([class~='not-prose'] *)) {
  color: inherit;
  font-weight: 900;
}

.prose :where(h2):not(:where([class~='not-prose'] *)) {
  color: var(--tw-prose-headings);
  font-size: 1.5em;
  font-weight: 700;
  line-height: 1.3333333;
  margin-bottom: 1em;
  margin-top: 2em;
}

.prose :where(h2 strong):not(:where([class~='not-prose'] *)) {
  color: inherit;
  font-weight: 800;
}

.prose :where(h3):not(:where([class~='not-prose'] *)) {
  color: var(--tw-prose-headings);
  font-size: 1.25em;
  font-weight: 600;
  line-height: 1.6;
  margin-bottom: 0.6em;
  margin-top: 1.6em;
}

.prose :where(h3 strong):not(:where([class~='not-prose'] *)) {
  color: inherit;
  font-weight: 700;
}

.prose :where(h4):not(:where([class~='not-prose'] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  line-height: 1.5;
  margin-bottom: 0.5em;
  margin-top: 1.5em;
}

.prose :where(h4 strong):not(:where([class~='not-prose'] *)) {
  color: inherit;
  font-weight: 700;
}

.prose :where(img):not(:where([class~='not-prose'] *)) {
  margin-bottom: 2em;
  margin-top: 2em;
}

.prose :where(figure > *):not(:where([class~='not-prose'] *)) {
  margin-bottom: 0;
  margin-top: 0;
}

.prose :where(figcaption):not(:where([class~='not-prose'] *)) {
  color: var(--tw-prose-captions);
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
}

.prose :where(code):not(:where([class~='not-prose'] *)) {
  color: var(--tw-prose-code);
  font-size: 0.875em;
  font-weight: 600;
}

.prose :where(code):not(:where([class~='not-prose'] *)):before {
  content: '`';
}

.prose :where(code):not(:where([class~='not-prose'] *)):after {
  content: '`';
}

.prose :where(a code):not(:where([class~='not-prose'] *)) {
  color: inherit;
}

.prose :where(h1 code):not(:where([class~='not-prose'] *)) {
  color: inherit;
}

.prose :where(h2 code):not(:where([class~='not-prose'] *)) {
  color: inherit;
  font-size: 0.875em;
}

.prose :where(h3 code):not(:where([class~='not-prose'] *)) {
  color: inherit;
  font-size: 0.9em;
}

.prose :where(h4 code):not(:where([class~='not-prose'] *)) {
  color: inherit;
}

.prose :where(blockquote code):not(:where([class~='not-prose'] *)) {
  color: inherit;
}

.prose :where(thead th code):not(:where([class~='not-prose'] *)) {
  color: inherit;
}

.prose :where(pre):not(:where([class~='not-prose'] *)) {
  background-color: transparent;
  border-radius: 0.375rem;
  color: currentColor;
  font-size: 0.875em;
  font-weight: 400;
  line-height: 1.7142857;
  margin: 0;
  overflow-x: auto;
  padding: 0;
}

.prose :where(pre code):not(:where([class~='not-prose'] *)) {
  background-color: transparent;
  border-radius: 0;
  border-width: 0;
  color: inherit;
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
  line-height: inherit;
  padding: 0;
}

.prose :where(pre code):not(:where([class~='not-prose'] *)):before {
  content: none;
}

.prose :where(pre code):not(:where([class~='not-prose'] *)):after {
  content: none;
}

.prose :where(table):not(:where([class~='not-prose'] *)) {
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-bottom: 2em;
  margin-top: 2em;
  table-layout: auto;
  text-align: left;
  width: 100%;
}

.prose :where(thead):not(:where([class~='not-prose'] *)) {
  border-bottom-color: var(--tw-prose-th-borders);
  border-bottom-width: 1px;
}

.prose :where(thead th):not(:where([class~='not-prose'] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
  padding-right: 0.5714286em;
  vertical-align: bottom;
}

.prose :where(tbody tr):not(:where([class~='not-prose'] *)) {
  border-bottom-color: var(--tw-prose-td-borders);
  border-bottom-width: 1px;
}

.prose :where(tbody tr:last-child):not(:where([class~='not-prose'] *)) {
  border-bottom-width: 0;
}

.prose :where(tbody td):not(:where([class~='not-prose'] *)) {
  vertical-align: baseline;
}

.prose :where(tfoot):not(:where([class~='not-prose'] *)) {
  border-top-color: var(--tw-prose-th-borders);
  border-top-width: 1px;
}

.prose :where(tfoot td):not(:where([class~='not-prose'] *)) {
  vertical-align: top;
}

.prose :where(p):not(:where([class~='not-prose'] *)) {
  margin-bottom: 1.25em;
  margin-top: 1.25em;
}

.prose :where(video):not(:where([class~='not-prose'] *)) {
  margin-bottom: 2em;
  margin-top: 2em;
}

.prose :where(figure):not(:where([class~='not-prose'] *)) {
  margin-bottom: 2em;
  margin-top: 2em;
}

.prose :where(li):not(:where([class~='not-prose'] *)) {
  margin-bottom: 0.5em;
  margin-top: 0.5em;
}

.prose :where(ol > li):not(:where([class~='not-prose'] *)) {
  padding-left: 0.375em;
}

.prose :where(ul > li):not(:where([class~='not-prose'] *)) {
  padding-left: 0.375em;
}

.prose :where(.prose > ul > li p):not(:where([class~='not-prose'] *)) {
  margin-bottom: 0.75em;
  margin-top: 0.75em;
}

.prose
  :where(.prose > ul > li > :first-child):not(:where([class~='not-prose'] *)) {
  margin-top: 1.25em;
}

.prose
  :where(.prose > ul > li > :last-child):not(:where([class~='not-prose'] *)) {
  margin-bottom: 1.25em;
}

.prose
  :where(.prose > ol > li > :first-child):not(:where([class~='not-prose'] *)) {
  margin-top: 1.25em;
}

.prose
  :where(.prose > ol > li > :last-child):not(:where([class~='not-prose'] *)) {
  margin-bottom: 1.25em;
}

.prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~='not-prose'] *)) {
  margin-bottom: 0.75em;
  margin-top: 0.75em;
}

.prose :where(hr + *):not(:where([class~='not-prose'] *)) {
  margin-top: 0;
}

.prose :where(h2 + *):not(:where([class~='not-prose'] *)) {
  margin-top: 0;
}

.prose :where(h3 + *):not(:where([class~='not-prose'] *)) {
  margin-top: 0;
}

.prose :where(h4 + *):not(:where([class~='not-prose'] *)) {
  margin-top: 0;
}

.prose :where(thead th:first-child):not(:where([class~='not-prose'] *)) {
  padding-left: 0;
}

.prose :where(thead th:last-child):not(:where([class~='not-prose'] *)) {
  padding-right: 0;
}

.prose :where(tbody td, tfoot td):not(:where([class~='not-prose'] *)) {
  padding: 0.5714286em;
}

.prose
  :where(tbody td:first-child, tfoot td:first-child):not(
    :where([class~='not-prose'] *)
  ) {
  padding-left: 0;
}

.prose
  :where(tbody td:last-child, tfoot td:last-child):not(
    :where([class~='not-prose'] *)
  ) {
  padding-right: 0;
}

.prose :where(.prose > :first-child):not(:where([class~='not-prose'] *)) {
  margin-top: 0;
}

.prose :where(.prose > :last-child):not(:where([class~='not-prose'] *)) {
  margin-bottom: 0;
}

.prose-sm :where(.prose > ul > li p):not(:where([class~='not-prose'] *)) {
  margin-bottom: 0.5714286em;
  margin-top: 0.5714286em;
}

.prose-sm
  :where(.prose > ul > li > :first-child):not(:where([class~='not-prose'] *)) {
  margin-top: 1.1428571em;
}

.prose-sm
  :where(.prose > ul > li > :last-child):not(:where([class~='not-prose'] *)) {
  margin-bottom: 1.1428571em;
}

.prose-sm
  :where(.prose > ol > li > :first-child):not(:where([class~='not-prose'] *)) {
  margin-top: 1.1428571em;
}

.prose-sm
  :where(.prose > ol > li > :last-child):not(:where([class~='not-prose'] *)) {
  margin-bottom: 1.1428571em;
}

.prose-sm :where(.prose > :first-child):not(:where([class~='not-prose'] *)) {
  margin-top: 0;
}

.prose-sm :where(.prose > :last-child):not(:where([class~='not-prose'] *)) {
  margin-bottom: 0;
}

.prose-base :where(.prose > ul > li p):not(:where([class~='not-prose'] *)) {
  margin-bottom: 0.75em;
  margin-top: 0.75em;
}

.prose-base
  :where(.prose > ul > li > :first-child):not(:where([class~='not-prose'] *)) {
  margin-top: 1.25em;
}

.prose-base
  :where(.prose > ul > li > :last-child):not(:where([class~='not-prose'] *)) {
  margin-bottom: 1.25em;
}

.prose-base
  :where(.prose > ol > li > :first-child):not(:where([class~='not-prose'] *)) {
  margin-top: 1.25em;
}

.prose-base
  :where(.prose > ol > li > :last-child):not(:where([class~='not-prose'] *)) {
  margin-bottom: 1.25em;
}

.prose-base :where(.prose > :first-child):not(:where([class~='not-prose'] *)) {
  margin-top: 0;
}

.prose-base :where(.prose > :last-child):not(:where([class~='not-prose'] *)) {
  margin-bottom: 0;
}

.prose-lg :where(.prose > ul > li p):not(:where([class~='not-prose'] *)) {
  margin-bottom: 0.8888889em;
  margin-top: 0.8888889em;
}

.prose-lg
  :where(.prose > ul > li > :first-child):not(:where([class~='not-prose'] *)) {
  margin-top: 1.3333333em;
}

.prose-lg
  :where(.prose > ul > li > :last-child):not(:where([class~='not-prose'] *)) {
  margin-bottom: 1.3333333em;
}

.prose-lg
  :where(.prose > ol > li > :first-child):not(:where([class~='not-prose'] *)) {
  margin-top: 1.3333333em;
}

.prose-lg
  :where(.prose > ol > li > :last-child):not(:where([class~='not-prose'] *)) {
  margin-bottom: 1.3333333em;
}

.prose-lg :where(.prose > :first-child):not(:where([class~='not-prose'] *)) {
  margin-top: 0;
}

.prose-lg :where(.prose > :last-child):not(:where([class~='not-prose'] *)) {
  margin-bottom: 0;
}

.prose-xl :where(.prose > ul > li p):not(:where([class~='not-prose'] *)) {
  margin-bottom: 0.8em;
  margin-top: 0.8em;
}

.prose-xl
  :where(.prose > ul > li > :first-child):not(:where([class~='not-prose'] *)) {
  margin-top: 1.2em;
}

.prose-xl
  :where(.prose > ul > li > :last-child):not(:where([class~='not-prose'] *)) {
  margin-bottom: 1.2em;
}

.prose-xl
  :where(.prose > ol > li > :first-child):not(:where([class~='not-prose'] *)) {
  margin-top: 1.2em;
}

.prose-xl
  :where(.prose > ol > li > :last-child):not(:where([class~='not-prose'] *)) {
  margin-bottom: 1.2em;
}

.prose-xl :where(.prose > :first-child):not(:where([class~='not-prose'] *)) {
  margin-top: 0;
}

.prose-xl :where(.prose > :last-child):not(:where([class~='not-prose'] *)) {
  margin-bottom: 0;
}

.prose-2xl :where(.prose > ul > li p):not(:where([class~='not-prose'] *)) {
  margin-bottom: 0.8333333em;
  margin-top: 0.8333333em;
}

.prose-2xl
  :where(.prose > ul > li > :first-child):not(:where([class~='not-prose'] *)) {
  margin-top: 1.3333333em;
}

.prose-2xl
  :where(.prose > ul > li > :last-child):not(:where([class~='not-prose'] *)) {
  margin-bottom: 1.3333333em;
}

.prose-2xl
  :where(.prose > ol > li > :first-child):not(:where([class~='not-prose'] *)) {
  margin-top: 1.3333333em;
}

.prose-2xl
  :where(.prose > ol > li > :last-child):not(:where([class~='not-prose'] *)) {
  margin-bottom: 1.3333333em;
}

.prose-2xl :where(.prose > :first-child):not(:where([class~='not-prose'] *)) {
  margin-top: 0;
}

.prose-2xl :where(.prose > :last-child):not(:where([class~='not-prose'] *)) {
  margin-bottom: 0;
}

.form-input,
.form-multiselect,
.form-select,
.form-textarea {
  --tw-shadow: 0 0 transparent;
  -webkit-appearance: none;
  appearance: none;
  background-color: #fff;
  border-color: #8e8ea0;
  border-radius: 0;
  border-width: 1px;
  font-size: 1rem;
  line-height: 1.5rem;
  padding: 0.5rem 0.75rem;
}

.form-input:focus,
.form-multiselect:focus,
.form-select:focus,
.form-textarea:focus {
  --tw-ring-inset: var(--tw-empty, /*!*/ /*!*/);
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: #2563eb;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
    var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
    calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  border-color: #2563eb;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
    var(--tw-shadow);
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.form-input::-webkit-input-placeholder,
.form-textarea::-webkit-input-placeholder {
  color: #8e8ea0;
  opacity: 1;
}

.form-input::placeholder,
.form-textarea::placeholder {
  color: #8e8ea0;
  opacity: 1;
}

.form-input::-webkit-datetime-edit-fields-wrapper {
  padding: 0;
}

.form-input::-webkit-date-and-time-value {
  min-height: 1.5em;
}

.form-input::-webkit-datetime-edit,
.form-input::-webkit-datetime-edit-day-field,
.form-input::-webkit-datetime-edit-hour-field,
.form-input::-webkit-datetime-edit-meridiem-field,
.form-input::-webkit-datetime-edit-millisecond-field,
.form-input::-webkit-datetime-edit-minute-field,
.form-input::-webkit-datetime-edit-month-field,
.form-input::-webkit-datetime-edit-second-field,
.form-input::-webkit-datetime-edit-year-field {
  padding-bottom: 0;
  padding-top: 0;
}

.btn {
  align-items: center;
  border-color: transparent;
  border-radius: 0.25rem;
  border-width: 1px;
  display: inline-flex;
  font-size: 0.875rem;
  line-height: 1.25rem;
  padding: 0.5rem 0.75rem;
  pointer-events: auto;
}

.btn:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.btn:disabled {
  cursor: not-allowed;
  opacity: 0.5;
}

.btn-primary {
  --tw-bg-opacity: 1;
  --tw-text-opacity: 1;
  background-color: rgba(16, 163, 127, var(--tw-bg-opacity));
  color: rgba(255, 255, 255, var(--tw-text-opacity));
}

.btn-primary:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(26, 127, 100, var(--tw-bg-opacity));
}

.btn-primary:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
    var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
    calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  --tw-ring-offset-width: 2px;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
    0 0 transparent;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
    var(--tw-shadow, 0 0 transparent);
}

.btn-primary.focus-visible {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgba(25, 195, 125, var(--tw-ring-opacity));
}

.btn-primary:focus-visible {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgba(25, 195, 125, var(--tw-ring-opacity));
}

.btn-neutral {
  --tw-bg-opacity: 1;
  --tw-text-opacity: 1;
  background-color: rgba(255, 255, 255, var(--tw-bg-opacity));
  border-color: rgba(0, 0, 0, 0.1);
  border-width: 1px;
  color: rgba(64, 65, 79, var(--tw-text-opacity));
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.btn-neutral:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(236, 236, 241, var(--tw-bg-opacity));
}

.btn-neutral:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
    var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
    calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  --tw-ring-offset-width: 2px;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
    0 0 transparent;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
    var(--tw-shadow, 0 0 transparent);
}

.btn-neutral.focus-visible {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgba(99, 102, 241, var(--tw-ring-opacity));
}

.btn-neutral:focus-visible {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgba(99, 102, 241, var(--tw-ring-opacity));
}

.dark .btn-neutral {
  --tw-border-opacity: 1;
  --tw-bg-opacity: 1;
  --tw-text-opacity: 1;
  background-color: rgba(52, 53, 65, var(--tw-bg-opacity));
  border-color: rgba(86, 88, 105, var(--tw-border-opacity));
  color: rgba(217, 217, 227, var(--tw-text-opacity));
}

.dark .btn-neutral:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(64, 65, 79, var(--tw-bg-opacity));
}

.btn-dark {
  --tw-border-opacity: 1;
  --tw-bg-opacity: 1;
  --tw-text-opacity: 1;
  background-color: rgba(52, 53, 65, var(--tw-bg-opacity));
  border-color: rgba(86, 88, 105, var(--tw-border-opacity));
  border-width: 1px;
  color: rgba(255, 255, 255, var(--tw-text-opacity));
}

.btn-dark:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(64, 65, 79, var(--tw-bg-opacity));
}

.btn-light {
  --tw-bg-opacity: 1;
  --tw-text-opacity: 1;
  background-color: rgba(236, 236, 241, var(--tw-bg-opacity));
  color: rgba(0, 0, 0, var(--tw-text-opacity));
}

.btn-light:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(255, 255, 255, var(--tw-bg-opacity));
}

.btn-disabled {
  --tw-bg-opacity: 1;
  --tw-text-opacity: 1;
  color: rgba(142, 142, 160, var(--tw-text-opacity));
  cursor: not-allowed;
}

.btn-disabled,
.btn-disabled:hover {
  background-color: rgba(236, 236, 241, var(--tw-bg-opacity));
}

.btn-disabled:hover {
  --tw-bg-opacity: 1;
}

.btn-small {
  padding: 0.25rem 0.5rem;
}
